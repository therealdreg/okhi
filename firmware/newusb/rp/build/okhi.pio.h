// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// -------------- //
// tar_lowsp_pio0 //
// -------------- //

#define tar_lowsp_pio0_wrap_target 0
#define tar_lowsp_pio0_wrap 30

static const uint16_t tar_lowsp_pio0_program_instructions[] = {
            //     .wrap_target
    0xa02b, //  0: mov    x, !null                   
    0x20a1, //  1: wait   1 pin, 1                   
    0x2021, //  2: wait   0 pin, 1                   
    0xa142, //  3: nop                           [1] 
    0x0045, //  4: jmp    x--, 5                     
    0x4001, //  5: in     pins, 1                    
    0xa0f0, //  6: mov    osr, ::pins                
    0x6042, //  7: out    y, 2                       
    0x0075, //  8: jmp    !y, 21                     
    0xa342, //  9: nop                           [3] 
    0x00c4, // 10: jmp    pin, 4                     
    0x004c, // 11: jmp    x--, 12                    
    0x4001, // 12: in     pins, 1                    
    0xa0f0, // 13: mov    osr, ::pins                
    0x6042, // 14: out    y, 2                       
    0x0075, // 15: jmp    !y, 21                     
    0x00c3, // 16: jmp    pin, 3                     
    0x00c3, // 17: jmp    pin, 3                     
    0x00c3, // 18: jmp    pin, 3                     
    0x00c3, // 19: jmp    pin, 3                     
    0x000b, // 20: jmp    11                         
    0x8000, // 21: push   noblock                    
    0xa0c1, // 22: mov    isr, x                     
    0x8000, // 23: push   noblock                    
    0xe03f, // 24: set    x, 31                      
    0xa0f0, // 25: mov    osr, ::pins                
    0x6042, // 26: out    y, 2                       
    0x0080, // 27: jmp    y--, 0                     
    0x0059, // 28: jmp    x--, 25                    
    0xa0cb, // 29: mov    isr, !null                 
    0x8000, // 30: push   noblock                    
            //     .wrap
    0x20a2, // 31: wait   1 pin, 2                   
};

#if !PICO_NO_HARDWARE
static const struct pio_program tar_lowsp_pio0_program = {
    .instructions = tar_lowsp_pio0_program_instructions,
    .length = 32,
    .origin = -1,
};

static inline pio_sm_config tar_lowsp_pio0_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + tar_lowsp_pio0_wrap_target, offset + tar_lowsp_pio0_wrap);
    return c;
}
#endif

// -------- //
// tar_pio1 //
// -------- //

#define tar_pio1_wrap_target 2
#define tar_pio1_wrap 19

static const uint16_t tar_pio1_program_instructions[] = {
    0xe081, //  0: set    pindirs, 1                 
    0xe000, //  1: set    pins, 0                    
            //     .wrap_target
    0xbf42, //  2: nop                           [31]
    0xbf42, //  3: nop                           [31]
    0xbf42, //  4: nop                           [31]
    0xbf42, //  5: nop                           [31]
    0xa0f0, //  6: mov    osr, ::pins                
    0x6042, //  7: out    y, 2                       
    0x0086, //  8: jmp    y--, 6                     
    0xa0f0, //  9: mov    osr, ::pins                
    0x6042, // 10: out    y, 2                       
    0x0086, // 11: jmp    y--, 6                     
    0xa0f0, // 12: mov    osr, ::pins                
    0x6042, // 13: out    y, 2                       
    0x0086, // 14: jmp    y--, 6                     
    0xa0f0, // 15: mov    osr, ::pins                
    0x6042, // 16: out    y, 2                       
    0x0086, // 17: jmp    y--, 6                     
    0xe001, // 18: set    pins, 1                    
    0x0013, // 19: jmp    19                         
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program tar_pio1_program = {
    .instructions = tar_pio1_program_instructions,
    .length = 20,
    .origin = -1,
};

static inline pio_sm_config tar_pio1_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + tar_pio1_wrap_target, offset + tar_pio1_wrap);
    return c;
}
#endif

